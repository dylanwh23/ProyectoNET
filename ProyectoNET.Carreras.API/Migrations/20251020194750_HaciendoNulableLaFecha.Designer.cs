// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProyectoNET.Carreras.API.Data;

#nullable disable

namespace ProyectoNET.Carreras.API.Migrations
{
    [DbContext(typeof(CarrerasDbContext))]
    [Migration("20251020194750_HaciendoNulableLaFecha")]
    partial class HaciendoNulableLaFecha
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProyectoNET.Carreras.API.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadMaximaParticipantes")
                        .HasColumnType("integer");

                    b.Property<long>("CostoInscripcion")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaInicio")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<string>>("LugaresRetiroEquipamiento")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("ProyectoNET.Carreras.API.Models.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CarreraId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EquipamientoEntregado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LugarRetiroEquipamientoElegido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("ProyectoNET.Carreras.API.Models.Participante", b =>
                {
                    b.HasOne("ProyectoNET.Carreras.API.Models.Carrera", "Carrera")
                        .WithMany("Participantes")
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("ProyectoNET.Carreras.API.Models.Carrera", b =>
                {
                    b.Navigation("Participantes");
                });
#pragma warning restore 612, 618
        }
    }
}
